When would you want to use a remote repository rather than keeping all your work local?

    A remote repository would be of greater importance when working on a collaborative
    project with other people, this would keep the workflow very neat and easy to manage.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

    Your remote repository most at times would likely be your production version, while
    the local repository would be the development version, so automatically pull from your
    production version(remote) into your local version while probably experimenting a new
    future or working on a bug fix could break your code base for a while giving you some
    easily avoidable headache.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

    Forks: Are basically cloning or copying someone else public repository on GitHub to which
           you would want to work on but have no access to commit changes onto the repository.
    Clones: Are essentially making your own copy of a repository that you would always want
            to work on and commit changes to, be it remotely or locally.
            A use case would be you wanting to have your own copy or files of collaborative
            project you would want to work on locally.
    Branches: refers to various codebase to which you could work on in your project or even try
              out experimental features without breaking your code base.
              This is best suited in a collaborative environment with different people working
              on different features on a particular project.

What is the benefit of having a copy of the last known state of the remote stored locally?

    This essentially help the Git system avoid conflicts in commits, especially in a multi user or
    collaborative project environment.
    You could also access the remote copy of the project locally on your system and compares
    differences before even making a commit.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

    I really don't know if it would be easily possible to remotely collaborate on a project, if not
    for the traditional zip,upload and download method which would have been time taking and painstaking
    in times of code conflict resolution, discovery and fixing of bugs and even versioning, But with
    Git and GitHub all of this features and processes are been simplified and are really easier to work with.

When would you want to make changes in a separate branch rather than directly in master? What benefits does
each approach have?

    I would say when experimenting with new features on your project, especially in a collaborative environment
    and you would want to have everyone review your changes before its been finally pulled into the master branch
    or code base of the project.
